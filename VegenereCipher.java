/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package classic.encription;

/**
 *
 * @author Admin
 */
public class VegenereCipher extends javax.swing.JFrame {

    /**
     * Creates new form VegenereCipher
     */
    public VegenereCipher() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        resultDe = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultEn = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textKey1 = new javax.swing.JTextField();
        textGen1 = new javax.swing.JTextField();
        textKey2 = new javax.swing.JTextField();
        textGen2 = new javax.swing.JTextField();
        btnEn = new javax.swing.JButton();
        btnDe = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Vegenere Cipher");

        resultDe.setColumns(20);
        resultDe.setRows(5);
        jScrollPane1.setViewportView(resultDe);

        resultEn.setColumns(20);
        resultEn.setRows(5);
        jScrollPane2.setViewportView(resultEn);

        jLabel1.setText("Key");

        jLabel2.setText("Key Generation");

        jLabel3.setText("Key");

        jLabel4.setText("Key Generation");

        btnEn.setText("Encrypt");
        btnEn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnActionPerformed(evt);
            }
        });

        btnDe.setText("Decrypt");
        btnDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(btnDe)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(jLabel2)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textKey2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(textGen1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(textKey1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(textGen2, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE))
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEn)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(textKey1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(textGen1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEn)))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(textKey2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(textGen2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDe)))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnEnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnActionPerformed
        String key = textKey1.getText();
        String text = resultDe.getText();
        String ktext = generateKey(text, key);
        textGen1.setText(ktext);
        resultEn.setText(encrypt(text, ktext));
    }//GEN-LAST:event_btnEnActionPerformed

    private void btnDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeActionPerformed
        String key = textKey2.getText();
        String text = resultEn.getText();
        String ktext = generateKey(text, key);
        textGen2.setText(ktext);
        resultDe.setText(decrypt(text, ktext));
    }//GEN-LAST:event_btnDeActionPerformed

    public static String generateKey(String text, String key){
        StringBuilder ktext = new StringBuilder();
        if (text.length() > key.length()){
            for (int i = 0; i < key.length(); i++){
                char kch = key.charAt(i);
                ktext.append(kch);
            }
            int du = text.length() - key.length();
            for (int i = 0; i < du; i++){
                char kch = key.charAt(i);
                ktext.append(kch);
            }
        }
        else{
            for (int i = 0; i < text.length(); i++){
                char kch = key.charAt(i);
                ktext.append(kch);
            }
        }
        return ktext.toString();
    }
    
    public static String encrypt(String text, String genKey){
        StringBuilder result = new StringBuilder();
        for (int i = 0; i < text.length(); i++){
            char ch = text.charAt(i);
            char kch = genKey.charAt(i);
            if ('A' <= ch && ch <= 'Z'){
                int p = ch - 'A'; //VD: C(67)-A(65)=2
                if ('A' <= kch && kch <= 'Z'){
                    int k = kch - 'A';
                    int c = (p + k) % 26; 
                    result.append((char)(c + 'A')); //chuyen ve ma ascii
                }
                else{
                    int k = kch - 'a';
                    int c = (p + k) % 26; 
                    result.append((char)(c + 'A')); //chuyen ve ma ascii
                }
            }
            else if ('a' <= ch && ch <= 'z'){
                int p = ch - 'a'; //VD: C(67)-A(65)=2
                if ('A' <= kch && kch <= 'Z'){
                    int k = kch - 'A';
                    int c = (p + k) % 26; 
                    result.append((char)(c + 'a')); //chuyen ve ma ascii
                }
                else{
                    int k = kch - 'a';
                    int c = (p + k) % 26; 
                    result.append((char)(c + 'a')); //chuyen ve ma ascii
                }
            }
            //neu ky tu khong phai chu cai
            else{
                result.append(ch);
            }
        }
        return result.toString();
    }
    
    public static String decrypt(String text, String genKey){
        StringBuilder result = new StringBuilder();
        for (int i = 0; i < text.length(); i++){
            char ch = text.charAt(i);
            char kch = genKey.charAt(i);
            if ('A' <= ch && ch <= 'Z'){
                int c = ch - 'A'; //VD: C(67)-A(65)=2
                if ('A' <= kch && kch <= 'Z'){
                    int k = kch - 'A';
                    int p = (c - k + 26) % 26;  // +26 de gia tri luon duong
                    result.append((char)(p + 'A')); //chuyen ve ma ascii
                }
                else{
                    int k = kch - 'a';
                    int p = (c - k + 26) % 26; 
                    result.append((char)(p + 'A')); //chuyen ve ma ascii
                }
            }
            else if ('a' <= ch && ch <= 'z'){
                int c = ch - 'a'; //VD: C(67)-A(65)=2
                if ('A' <= kch && kch <= 'Z'){
                    int k = kch - 'A';
                    int p = (c - k + 26) % 26; 
                    result.append((char)(p + 'a')); //chuyen ve ma ascii
                }
                else{
                    int k = kch - 'a';
                    int p = (c - k + 26) % 26; 
                    result.append((char)(p + 'a')); //chuyen ve ma ascii
                }
            }
            //neu ky tu khong phai chu cai
            else{
                result.append(ch);
            }
        }
        return result.toString();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VegenereCipher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VegenereCipher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VegenereCipher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VegenereCipher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VegenereCipher().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDe;
    private javax.swing.JButton btnEn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea resultDe;
    private javax.swing.JTextArea resultEn;
    private javax.swing.JTextField textGen1;
    private javax.swing.JTextField textGen2;
    private javax.swing.JTextField textKey1;
    private javax.swing.JTextField textKey2;
    // End of variables declaration//GEN-END:variables
}
